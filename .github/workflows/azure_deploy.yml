name: Deploy Resources to Azure
on:
  pull_request:
    branches:
      - main
    paths:
      - 'azure/**'
  workflow_dispatch:


permissions:
  id-token: write
  issues: write
  pull-requests: write
  contents: read

jobs:
  terraform_plan:
    defaults:
      run:
        working-directory: ./cluster-deployment
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: prod
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Fmt
      id: fmt
      run: terraform fmt -check

    - name: Terraform Init
      id: init
      run: terraform init -backend-config="resource_group_name=${{vars.RESOURCE_GROUP}}" -backend-config="storage_account_name=${{vars.AZURE_STORAGE_ACCOUNT_NAME}}" -backend-config="container_name=${{vars.CONTAINER_NAME}}"
    
    - name: Azure Login
      uses: azure/login@v2
      with:
        tenant-id: ${{ secrets.TENANT_ID }}
        client-id: ${{ secrets.CLIENT_ID }}
        subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
    
    - name: Az CLI
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az account show

    - name: Terraform init
      id: init
      env:
        storage_account_name: ${{ vars.STORAGE_ACCOUNT_NAME }}
        container_name: ${{ vars.CONTAINER_NAME }}
        resource_group: ${{ vars.RESOURCE_GROUP }}
        ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      run: |
        cd azure
        terraform init -backend-config="storage_account_name=$storage_account_name" -backend-config="container_name=$container_name" -backend-config="resource_group_name=$resource_group"
    
    - name: Terraform Plan
      id: plan
      run: |
        cd azure
        terraform plan
    
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: |
        cd azure
        terraform apply -auto-approve